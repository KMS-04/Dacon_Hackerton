{"ast":null,"code":"// src/components/Chatbot.js\nimport React,{useState,useEffect,useRef}from'react';import'./Chatbot';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const chatWindowRef=useRef(null);const textareaRef=useRef(null);const handleSend=()=>{if(input.trim()){setMessages([...messages,{user:'User',text:input}]);setInput('');// 여기에 챗봇 응답 로직을 추가할 수 있습니다\nsetMessages(prevMessages=>[...prevMessages,{user:'Bot',text:'응답 메시지'}]);}};useEffect(()=>{if(chatWindowRef.current){chatWindowRef.current.scrollTop=chatWindowRef.current.scrollHeight;}},[messages]);useEffect(()=>{if(textareaRef.current){textareaRef.current.style.overflow='hidden';textareaRef.current.style.whiteSpace='pre-wrap';}},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uCC57\\uBD07\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",ref:chatWindowRef,children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"chat-message \".concat(msg.user.toLowerCase()),children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-bubble \".concat(msg.user.toLowerCase()),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.user,\":\"]}),\" \",msg.text]})},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,value:input,onChange:e=>setInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSend()}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,children:\"Send\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","chatWindowRef","textareaRef","handleSend","trim","user","text","prevMessages","current","scrollTop","scrollHeight","style","overflow","whiteSpace","className","children","ref","map","msg","index","concat","toLowerCase","value","onChange","e","target","onKeyPress","key","onClick"],"sources":["c:/projects/myproject/pybo/frontend/src/components/Chatbot.js"],"sourcesContent":["// src/components/Chatbot.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './Chatbot';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const chatWindowRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { user: 'User', text: input }]);\r\n      setInput('');\r\n      // 여기에 챗봇 응답 로직을 추가할 수 있습니다\r\n      setMessages(prevMessages => [...prevMessages, { user: 'Bot', text: '응답 메시지' }]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatWindowRef.current) {\r\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.overflow = 'hidden';\r\n      textareaRef.current.style.whiteSpace = 'pre-wrap';\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <h2>챗봇</h2>\r\n      <div className=\"chat-window\" ref={chatWindowRef}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.user.toLowerCase()}`}>\r\n            <div className={`chat-bubble ${msg.user.toLowerCase()}`}>\r\n              <strong>{msg.user}:</strong> {msg.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}